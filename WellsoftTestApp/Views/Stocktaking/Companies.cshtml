@model WellsoftTestApp.Models.Company

@{
    ViewData["Title"] = "Компании";
}

<h1>Компании</h1>

<p>
    <button type="button" class="btn btn-primary btn-sm" id="btnAddCompany">Добавить компанию</button>
</p>

<div class="modal fade hide" id="addModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Добавление компании</h5>
            </div>
            @using (Html.BeginForm("CreateCompany", "Stocktaking", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = " col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
                    <input type="submit" class="btn btn-success" id="confirmAdd" value="Добавить">
                </div>
            }
        </div>
    </div>
</div>

<div class="modal fade hide" id="editModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Изменение компании</h5>
            </div>
            @using (Html.BeginForm("EditCompany", "Stocktaking", FormMethod.Post))
            {
                <div class="modal-body" id="editModalBody">
                    @Html.AntiForgeryToken()
                    <div class="modal-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control", @id = "NameEdit" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    @Html.HiddenFor(m => m.Id)
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
                        <input type="submit" class="btn btn-primary" id="confirmEdit" value="Изменить">
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@*@Html.AntiForgeryToken()*@

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Name)</th>
        </tr>
    </thead>
    <tbody id="tblData">
    </tbody>
</table>

<div id="paged"></div>


@section Scripts{

    <script src="~/js/main.min.js"></script>
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}